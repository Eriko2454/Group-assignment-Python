# -*- coding: utf-8 -*-
"""mod.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1P7qMvCxLosm5YOfR4ltRqiCrlXtvbpOK
"""

def preturn():
    #library
    import numpy as np
    import pandas as pd
    import matplotlib.pyplot as plt
    import yfinance as yf
    from datetime import datetime, timedelta

    #dates
    fecha_hoy = datetime.now()
    fecha_inicio = (fecha_hoy - timedelta(days=3650)).date()

    # portfolio size
    number_stocks = int(input("How many stocks are in the porfolio? "))
    j = 1

    #ticker companies
    companies = []
    while j <= number_stocks:
        company = str(input(f"Ticket {j} company:  "))
        companies.append(company)
        j += 1

    #porfolio weights
    print("Porfolio Weights")
    weights = [1]
    i = 0
    pesos = 1
    while pesos != 100:
        weights.clear()
        while i < number_stocks:
            weight = int(input(f"Weight for {companies[i]}:  "))
            weights.append(weight)
            i += 1
        if sum(weights) == 100:
            break
        else:
            print("invalid weights")
            i = 0
    weights2 = [elemento / 100 for elemento in weights]
    weights = weights2

    #historical value table
    tickers = yf.Tickers(companies)
    tabla = tickers.download(start = fecha_inicio, end=fecha_hoy, interval='1d',)['Close']

    #portfolio
    portafolio = pd.DataFrame(columns=['Year'] + companies + ['Annual Return %'])

    #daily return
    rendimientos_diarios = tabla.pct_change()
    rendimientos_diarios = rendimientos_diarios.drop(rendimientos_diarios.index[0])
    tamano = len(rendimientos_diarios)
    if tamano > 2500:
        rendimientos_diarios = rendimientos_diarios.tail(2500)

    #annual return
    rendimientos2 = rendimientos_diarios + 1

    promedios_anuales = []
    for i in range(10):
        year = rendimientos2.head(250)
        promedio_year = year.prod()
        promedios_anuales.append(promedio_year)
        rendimientos2 = rendimientos2[250:]

    portafolio['Year'] = [1,2,3,4,5,6,7,8,9,10]
    portafolio[companies] = promedios_anuales

    #weighted annual return
    portafolio['Annual Return %'] = ((((portafolio[companies]* weights).sum(axis=1))*100)-100)
    rendimiento_total = ((portafolio['Annual Return %'])/100)
    rendimiento_total = rendimiento_total + 1
    rendimiento_total = rendimiento_total.prod()
    return f"{portafolio}\nThe total return of the porfolio is: {rendimiento_total*100} %"